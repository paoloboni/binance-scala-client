---
name: CI
on:
  pull_request:
    paths:
      - 'src/**'
      - 'project/**'
      - '**.sbt'
      - '.scalafmt.conf'
      - '.github/workflows/ci.yml'
  push:
    branches: [master]
    paths:
      - 'src/**'
      - 'project/**'
      - '**.sbt'
      - '.scalafmt.conf'
  schedule:
    - cron: '0 0 * * 0'
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        java:
          - openjdk@1.11
          - openjdk@1.17
        scala:
          - 2.12.15
          - 2.13.8
          - 3.1.2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        uses: olafurpg/setup-scala@v10
        with:
          java-version: "${{ matrix.java }}"
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Build and test
        run: sbt ++${{ matrix.scala }} scalafmtCheck test:scalafmtCheck scalafmtSbtCheck headerCheck test:headerCheck test
        shell: bash
        timeout-minutes: 10
  e2e:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scala:
          - 2.13.7
          - 3.1.0
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        uses: olafurpg/setup-scala@v10
        with:
          java-version: "adopt@1.11"
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Build and test
        env:
          FAPI_API_KEY: ${{ secrets.FAPI_API_KEY }}
          FAPI_SECRET_KEY: ${{ secrets.FAPI_SECRET_KEY }}
          SPOT_API_KEY: ${{ secrets.SPOT_API_KEY }}
          SPOT_SECRET_KEY: ${{ secrets.SPOT_SECRET_KEY }}
        run: sbt ++${{ matrix.scala }} e2e:test
        shell: bash
        timeout-minutes: 10
